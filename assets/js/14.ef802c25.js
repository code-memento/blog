(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{177:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"what-type-to-choose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-type-to-choose","aria-hidden":"true"}},[t._v("#")]),t._v(" What type to choose ?")]),t._v(" "),a("p",[t._v("Usually, when developping we don't ask ourselve a lot of questions about the type of a variable, a class's field or anything that has a type. Sometimes, we use a jack-of-all-trades type like String. But, is it the right choice ?")]),t._v(" "),a("p",[t._v("Choosing a type can be trivial. A bad choice though, can lead to polluted code and maintenance problems and sometimes to performance concerns.")]),t._v(" "),a("p",[t._v("Let's take a look at this piece of code :")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// Minimum date")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" String dateMin "),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// …")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Person's age")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" String age "),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// …")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" valid"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The first field is a "),a("em",[t._v("stringified")]),t._v(" date, if we want to display this date we have to convert it to the right format thus needing a pattern, an information that we don't have. It becomes more challenging if we have a multi-language app where the date must be displayed correctly depending on the language.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("This field should be a date.")])]),t._v(" "),a("p",[t._v("The second field represents a person's age, this data needs more memory than an integer, and comparing two ages cannot be performed without conversion.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("This field should be an integer.")])]),t._v(" "),a("p",[t._v("I'll let you guess what kind the third field should be, you're right, the validity should be expressed as a boolean.")]),t._v(" "),a("p",[t._v("You must keep in mind that you have to "),a("strong",[t._v("Choose the type that expresses the data the most")]),t._v(".")]),t._v(" "),a("p",[t._v("If we are dealing with a set of constants ("),a("em",[t._v("states, types, categories, etc.")]),t._v(") you should create an enumeration.")])])}],!1,null,null,null);n.options.__file="java-types.md";e.default=n.exports}}]);