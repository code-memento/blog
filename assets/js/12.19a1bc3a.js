(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{186:function(t,e,a){t.exports=a.p+"assets/img/diagram-class.df3a0ccf.png"},207:function(t,e,a){"use strict";a.r(e);var s=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"inject-all-implementations-using-spring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inject-all-implementations-using-spring","aria-hidden":"true"}},[t._v("#")]),t._v(" Inject all implementations using Spring")]),t._v(" "),s("p",[t._v("To be honest, Spring never ceases to amaze me especially with those small features that make your life easier.")]),t._v(" "),s("h2",{attrs:{id:"the-problem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-problem","aria-hidden":"true"}},[t._v("#")]),t._v(" The problem")]),t._v(" "),s("p",[t._v("I was working on project where I have different Spring beans that implement the same interface. Here is the inheritance tree :")]),t._v(" "),s("p",[s("img",{attrs:{src:a(186),alt:"Spring beans"}})]),t._v(" "),s("p",[t._v("I wanted to inject the whole list into a service so if I create a new builder it'll be picked automatically :")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IBuilderService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" builders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"the-solution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-solution","aria-hidden":"true"}},[t._v("#")]),t._v(" The solution")]),t._v(" "),s("p",[t._v("There is the wild solution of creating everything manually and  injecting it by name. But there is the clever "),s("em",[t._v("not-so-obvious")]),t._v(" "),s("em",[t._v("out-of-the-box")]),t._v(" solution ðŸ˜„:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token generics function"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IBuilderService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" builders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IBuilderService builder"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" builders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},s,!1,null,null,null);r.options.__file="spring-inject-implementations.md";e.default=r.exports}}]);